#!/bin/bash
# chkconfig: 2345 95 20
# processname: ec2-get-ssh
# description: Capture AWS public key credentials for EC2 user

# Source function library
. /etc/rc.d/init.d/functions
set -e

SSH_USERS="__USERS__"

# Source networking configuration
[ -r /etc/sysconfig/network ] && . /etc/sysconfig/network

# Replace the following environment variables for your system
export PATH=:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
 
# Check that networking is configured
if [ "${NETWORKING}" = "no" ]; then
  echo "Networking is not configured."
  exit 1
fi

setup_user() {
   if [ ! -d /home/$1/.ssh ]; then
    mkdir -p /home/$1/.ssh
    chmod 700 /home/$1/.ssh
    chown $1:$1 /home/$1/.ssh
  fi
  if [ $? -eq 0 ]; then

    cat /tmp/my-public-key >> /home/$1/.ssh/authorized_keys
    chmod 600 /home/$1/.ssh/authorized_keys
    chown $1:$1 /home/$1/.ssh/authorized_keys
  fi
}

start() {

  # Retrieve public key from metadata server using HTTP
  echo "EC2: Retrieve public key from metadata server using HTTP." 
  curl -f http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key > /tmp/my-public-key

  for USER in $SSH_USERS;
  do
    setup_user $USER
  done
  rm /tmp/my-public-key
}
 
stop() {
  echo "Nothing to do here"
}
 
restart() {
  stop
  start
}
 
# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
 
exit $?
